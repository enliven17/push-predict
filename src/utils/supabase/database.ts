export type Json =`n  | string`n  | number`n  | boolean`n  | null`n  | { [key: string]: Json | undefined }`n  | Json[];`n`nexport type Database = {`n  // Allows to automatically instantiate createClient with right options`n  // instead of createClient<Database, { PostgrestVersion: 'XX' }>(URL, KEY)`n  __InternalSupabase: {`n    PostgrestVersion: "13.0.4";`n  };`n  graphql_public: {`n    Tables: {`n      [_ in never]: never;`n    };`n    Views: {`n      [_ in never]: never;`n    };`n    Functions: {`n      graphql: {`n        Args: {`n          extensions?: Json;`n          operationName?: string;`n          query?: string;`n          variables?: Json;`n        };`n        Returns: Json;`n      };`n    };`n    Enums: {`n      [_ in never]: never;`n    };`n    CompositeTypes: {`n      [_ in never]: never;`n    };`n  };`n  public: {`n    Tables: {`n      activities: {`n        Row: {`n          activity_type: string;`n          created_at: string;`n          details: Json | null;`n          id: number;`n          market_id: number | null;`n          points_earned: number | null;`n          user_address: string;`n        };`n        Insert: {`n          activity_type: string;`n          created_at?: string;`n          details?: Json | null;`n          id?: number;`n          market_id?: number | null;`n          points_earned?: number | null;`n          user_address: string;`n        };`n        Update: {`n          activity_type?: string;`n          created_at?: string;`n          details?: Json | null;`n          id?: number;`n          market_id?: number | null;`n          points_earned?: number | null;`n          user_address?: string;`n        };`n        Relationships: [`n          {`n            foreignKeyName: "activities_user_address_fkey";`n            columns: ["user_address"];`n            isOneToOne: false;`n            referencedRelation: "users";`n            referencedColumns: ["address"];`n          },`n        ];`n      };`n      comment_reactions: {`n        Row: {`n          comment_id: number;`n          created_at: string | null;`n          id: number;`n          reaction_type: string;`n          user_address: string;`n        };`n        Insert: {`n          comment_id: number;`n          created_at?: string | null;`n          id?: number;`n          reaction_type: string;`n          user_address: string;`n        };`n        Update: {`n          comment_id?: number;`n          created_at?: string | null;`n          id?: number;`n          reaction_type?: string;`n          user_address?: string;`n        };`n        Relationships: [`n          {`n            foreignKeyName: "comment_reactions_comment_id_fkey";`n            columns: ["comment_id"];`n            isOneToOne: false;`n            referencedRelation: "comments";`n            referencedColumns: ["id"];`n          },`n          {`n            foreignKeyName: "comment_reactions_user_address_fkey";`n            columns: ["user_address"];`n            isOneToOne: false;`n            referencedRelation: "users";`n            referencedColumns: ["address"];`n          },`n        ];`n      };`n      comments: {`n        Row: {`n          content: string;`n          created_at: string | null;`n          dislikes_count: number | null;`n          edited: boolean | null;`n          id: number;`n          likes_count: number | null;`n          market_id: number | null;`n          parent_id: number | null;`n          updated_at: string | null;`n          user_address: string;`n        };`n        Insert: {`n          content: string;`n          created_at?: string | null;`n          dislikes_count?: number | null;`n          edited?: boolean | null;`n          id?: number;`n          likes_count?: number | null;`n          market_id?: number | null;`n          parent_id?: number | null;`n          updated_at?: string | null;`n          user_address: string;`n        };`n        Update: {`n          content?: string;`n          created_at?: string | null;`n          dislikes_count?: number | null;`n          edited?: boolean | null;`n          id?: number;`n          likes_count?: number | null;`n          market_id?: number | null;`n          parent_id?: number | null;`n          updated_at?: string | null;`n          user_address?: string;`n        };`n        Relationships: [`n          {`n            foreignKeyName: "comments_parent_id_fkey";`n            columns: ["parent_id"];`n            isOneToOne: false;`n            referencedRelation: "comments";`n            referencedColumns: ["id"];`n          },`n          {`n            foreignKeyName: "comments_user_address_fkey";`n            columns: ["user_address"];`n            isOneToOne: false;`n            referencedRelation: "users";`n            referencedColumns: ["address"];`n          },`n        ];`n      };`n      user_stats: {`n        Row: {`n          address: string;`n          average_bet_size: number | null;`n          current_streak: number | null;`n          Credit Predict_points: number | null;`n          last_updated: string | null;`n          longest_win_streak: number | null;`n          roi: number | null;`n          total_losses: number | null;`n          total_markets_participated: number | null;`n          total_staked: number | null;`n          total_winnings: number | null;`n          win_streak: number | null;`n        };`n        Insert: {`n          address: string;`n          average_bet_size?: number | null;`n          current_streak?: number | null;`n          Credit Predict_points?: number | null;`n          last_updated?: string | null;`n          longest_win_streak?: number | null;`n          roi?: number | null;`n          total_losses?: number | null;`n          total_markets_participated?: number | null;`n          total_staked?: number | null;`n          total_winnings?: number | null;`n          win_streak?: number | null;`n        };`n        Update: {`n          address?: string;`n          average_bet_size?: number | null;`n          current_streak?: number | null;`n          Credit Predict_points?: number | null;`n          last_updated?: string | null;`n          longest_win_streak?: number | null;`n          roi?: number | null;`n          total_losses?: number | null;`n          total_markets_participated?: number | null;`n          total_staked?: number | null;`n          total_winnings?: number | null;`n          win_streak?: number | null;`n        };`n        Relationships: [`n          {`n            foreignKeyName: "user_stats_address_fkey";`n            columns: ["address"];`n            isOneToOne: true;`n            referencedRelation: "users";`n            referencedColumns: ["address"];`n          },`n        ];`n      };`n      users: {`n        Row: {`n          address: string;`n          bio: string | null;`n          display_name: string;`n          joined_at: string;`n          last_updated: string | null;`n          profile_image_url: string | null;`n          username: string;`n        };`n        Insert: {`n          address: string;`n          bio?: string | null;`n          display_name: string;`n          joined_at?: string;`n          last_updated?: string | null;`n          profile_image_url?: string | null;`n          username: string;`n        };`n        Update: {`n          address?: string;`n          bio?: string | null;`n          display_name?: string;`n          joined_at?: string;`n          last_updated?: string | null;`n          profile_image_url?: string | null;`n          username?: string;`n        };`n        Relationships: [];`n      };`n    };`n    Views: {`n      [_ in never]: never;`n    };`n    Functions: {`n      [_ in never]: never;`n    };`n    Enums: {`n      [_ in never]: never;`n    };`n    CompositeTypes: {`n      [_ in never]: never;`n    };`n  };`n};`n`ntype DatabaseWithoutInternals = Omit<Database, "__InternalSupabase">;`n`ntype DefaultSchema = DatabaseWithoutInternals[Extract<`n  keyof Database,`n  "public"`n>];`n`nexport type Tables<`n  DefaultSchemaTableNameOrOptions extends`n    | keyof (DefaultSchema["Tables"] & DefaultSchema["Views"])`n    | { schema: keyof DatabaseWithoutInternals },`n  TableName extends DefaultSchemaTableNameOrOptions extends {`n    schema: keyof DatabaseWithoutInternals;`n  }`n    ? keyof (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"] &`n        DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Views"])`n    : never = never,`n> = DefaultSchemaTableNameOrOptions extends {`n  schema: keyof DatabaseWithoutInternals;`n}`n  ? (DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"] &`n      DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Views"])[TableName] extends {`n      Row: infer R;`n    }`n    ? R`n    : never`n  : DefaultSchemaTableNameOrOptions extends keyof (DefaultSchema["Tables"] &`n        DefaultSchema["Views"])`n    ? (DefaultSchema["Tables"] &`n        DefaultSchema["Views"])[DefaultSchemaTableNameOrOptions] extends {`n        Row: infer R;`n      }`n      ? R`n      : never`n    : never;`n`nexport type TablesInsert<`n  DefaultSchemaTableNameOrOptions extends`n    | keyof DefaultSchema["Tables"]`n    | { schema: keyof DatabaseWithoutInternals },`n  TableName extends DefaultSchemaTableNameOrOptions extends {`n    schema: keyof DatabaseWithoutInternals;`n  }`n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"]`n    : never = never,`n> = DefaultSchemaTableNameOrOptions extends {`n  schema: keyof DatabaseWithoutInternals;`n}`n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"][TableName] extends {`n      Insert: infer I;`n    }`n    ? I`n    : never`n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema["Tables"]`n    ? DefaultSchema["Tables"][DefaultSchemaTableNameOrOptions] extends {`n        Insert: infer I;`n      }`n      ? I`n      : never`n    : never;`n`nexport type TablesUpdate<`n  DefaultSchemaTableNameOrOptions extends`n    | keyof DefaultSchema["Tables"]`n    | { schema: keyof DatabaseWithoutInternals },`n  TableName extends DefaultSchemaTableNameOrOptions extends {`n    schema: keyof DatabaseWithoutInternals;`n  }`n    ? keyof DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"]`n    : never = never,`n> = DefaultSchemaTableNameOrOptions extends {`n  schema: keyof DatabaseWithoutInternals;`n}`n  ? DatabaseWithoutInternals[DefaultSchemaTableNameOrOptions["schema"]]["Tables"][TableName] extends {`n      Update: infer U;`n    }`n    ? U`n    : never`n  : DefaultSchemaTableNameOrOptions extends keyof DefaultSchema["Tables"]`n    ? DefaultSchema["Tables"][DefaultSchemaTableNameOrOptions] extends {`n        Update: infer U;`n      }`n      ? U`n      : never`n    : never;`n`nexport type Enums<`n  DefaultSchemaEnumNameOrOptions extends`n    | keyof DefaultSchema["Enums"]`n    | { schema: keyof DatabaseWithoutInternals },`n  EnumName extends DefaultSchemaEnumNameOrOptions extends {`n    schema: keyof DatabaseWithoutInternals;`n  }`n    ? keyof DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions["schema"]]["Enums"]`n    : never = never,`n> = DefaultSchemaEnumNameOrOptions extends {`n  schema: keyof DatabaseWithoutInternals;`n}`n  ? DatabaseWithoutInternals[DefaultSchemaEnumNameOrOptions["schema"]]["Enums"][EnumName]`n  : DefaultSchemaEnumNameOrOptions extends keyof DefaultSchema["Enums"]`n    ? DefaultSchema["Enums"][DefaultSchemaEnumNameOrOptions]`n    : never;`n`nexport type CompositeTypes<`n  PublicCompositeTypeNameOrOptions extends`n    | keyof DefaultSchema["CompositeTypes"]`n    | { schema: keyof DatabaseWithoutInternals },`n  CompositeTypeName extends PublicCompositeTypeNameOrOptions extends {`n    schema: keyof DatabaseWithoutInternals;`n  }`n    ? keyof DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"]`n    : never = never,`n> = PublicCompositeTypeNameOrOptions extends {`n  schema: keyof DatabaseWithoutInternals;`n}`n  ? DatabaseWithoutInternals[PublicCompositeTypeNameOrOptions["schema"]]["CompositeTypes"][CompositeTypeName]`n  : PublicCompositeTypeNameOrOptions extends keyof DefaultSchema["CompositeTypes"]`n    ? DefaultSchema["CompositeTypes"][PublicCompositeTypeNameOrOptions]`n    : never;`n`nexport const Constants = {`n  graphql_public: {`n    Enums: {},`n  },`n  public: {`n    Enums: {},`n  },`n} as const;