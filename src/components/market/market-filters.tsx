"use client";`n`n// src/components/market/market-filters.tsx`n`nimport { Card, CardContent, CardHeader, CardTitle } from "@/components/ui/card";`nimport { Button } from "@/components/ui/button";`nimport { Badge } from "@/components/ui/badge";`nimport { Label } from "@/components/ui/label";`nimport { Checkbox } from "@/components/ui/checkbox";`nimport { `n  Select, `n  SelectContent, `n  SelectItem, `n  SelectTrigger, `n  SelectValue `n} from "@/components/ui/select";`nimport { `n  RotateCcw,`n  TrendingUp,`n  Clock,`n  CheckCircle,`n  XCircle,`n  AlertCircle`n} from "lucide-react";`nimport { MarketCategory, MarketStatus } from "@/types/market";`n`nconst categories: { value: MarketCategory | "all"; label: string; color: string }[] = [`n  { value: "all", label: "All Categories", color: "bg-gray-100" },`n  { value: MarketCategory.Sports, label: "Sports", color: "bg-blue-100" },`n  { value: MarketCategory.Politics, label: "Politics", color: "bg-red-100" },`n//   { value: "Entertainment", label: "Entertainment", color: "bg-purple-100" },`n//   { value: "Technology", label: "Technology", color: "bg-green-100" },`n//   { value: "Economics", label: "Economics", color: "bg-yellow-100" },`n//   { value: "Science", label: "Science", color: "bg-indigo-100" },`n//   { value: "Other", label: "Other", color: "bg-gray-100" }`n];`n`nconst statuses: { value: MarketStatus | "all"; label: string; icon: any; color: string }[] = [`n  { value: "all", label: "All Statuses", icon: TrendingUp, color: "text-gray-600" },`n  { value: MarketStatus.Active, label: "Active", icon: TrendingUp, color: "text-green-600" },`n  { value: MarketStatus.Closed, label: "Closed", icon: Clock, color: "text-yellow-600" },`n  { value: MarketStatus.Resolved, label: "Resolved", icon: CheckCircle, color: "text-blue-600" },`n  { value: MarketStatus.Cancelled, label: "Cancelled", icon: XCircle, color: "text-red-600" }`n];`n`ninterface MarketFiltersProps {`n  selectedCategory: MarketCategory | "all";`n  selectedStatus: MarketStatus | "all";`n  onCategoryChange: (category: MarketCategory | "all") => void;`n  onStatusChange: (status: MarketStatus | "all") => void;`n  onReset: () => void;`n}`n`nexport function MarketFilters({`n  selectedCategory,`n  selectedStatus,`n  onCategoryChange,`n  onStatusChange,`n  onReset`n}: MarketFiltersProps) {`n  const hasActiveFilters = selectedCategory !== "all" || selectedStatus !== "all";`n`n  return (`n    <Card>`n      <CardHeader className="pb-4">`n        <div className="flex items-center justify-between">`n          <CardTitle className="text-lg">Filters</CardTitle>`n          {hasActiveFilters && (`n            <Button `n              variant="outline" `n              size="sm" `n              onClick={onReset}`n              className="flex items-center space-x-1"`n            >`n              <RotateCcw className="h-3 w-3" />`n              <span>Reset</span>`n            </Button>`n          )}`n        </div>`n      </CardHeader>`n`n      <CardContent className="space-y-6">`n        {/* Category Filter */}`n        <div className="space-y-3">`n          <Label className="text-sm font-medium">Category</Label>`n          <div className="grid grid-cols-2 sm:grid-cols-4 gap-2">`n            {categories.map((category) => {`n              const isSelected = selectedCategory === category.value;`n              return (`n                <button`n                  key={category.value}`n                  onClick={() => onCategoryChange(category.value)}`n                  className={`text-left p-3 rounded-lg border transition-all ${`n                    isSelected`n                      ? "border-primary bg-primary/5 text-primary"`n                      : "border-border hover:border-primary/50 hover:bg-muted/50"`n                  }`}`n                >`n                  <div className="flex items-center space-x-2">`n                    <div className={`w-3 h-3 rounded-full ${category.color}`} />`n                    <span className="text-sm font-medium">{category.label}</span>`n                  </div>`n                </button>`n              );`n            })}`n          </div>`n        </div>`n`n        {/* Status Filter */}`n        <div className="space-y-3">`n          <Label className="text-sm font-medium">Status</Label>`n          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-4 gap-2">`n            {statuses.map((status) => {`n              const Icon = status.icon;`n              const isSelected = selectedStatus === status.value;`n              `n              return (`n                <button`n                  key={status.value}`n                  onClick={() => onStatusChange(status.value)}`n                  className={`text-left p-3 rounded-lg border transition-all ${`n                    isSelected`n                      ? "border-primary bg-primary/5 text-primary"`n                      : "border-border hover:border-primary/50 hover:bg-muted/50"`n                  }`}`n                >`n                  <div className="flex items-center space-x-2">`n                    <Icon className={`w-4 h-4 ${isSelected ? "text-primary" : status.color}`} />`n                    <span className="text-sm font-medium">{status.label}</span>`n                  </div>`n                </button>`n              );`n            })}`n          </div>`n        </div>`n`n        {/* Volume Range */}`n        <div className="space-y-3">`n          <Label className="text-sm font-medium">Volume Range</Label>`n          <Select defaultValue="all">`n            <SelectTrigger>`n              <SelectValue placeholder="Select volume range" />`n            </SelectTrigger>`n            <SelectContent>`n              <SelectItem value="all">All Volumes</SelectItem>`n              <SelectItem value="low">Under 1K tCTC</SelectItem>`n              <SelectItem value="medium">1K - 10K tCTC</SelectItem>`n              <SelectItem value="high">10K - 100K tCTC</SelectItem>`n              <SelectItem value="very-high">Over 100K tCTC</SelectItem>`n            </SelectContent>`n          </Select>`n        </div>`n`n        {/* Time Range */}`n        <div className="space-y-3">`n          <Label className="text-sm font-medium">Ending Time</Label>`n          <div className="space-y-2">`n            <div className="flex items-center space-x-2">`n              <Checkbox id="ending-soon" />`n              <Label htmlFor="ending-soon" className="text-sm">`n                Ending within 24 hours`n              </Label>`n            </div>`n            <div className="flex items-center space-x-2">`n              <Checkbox id="ending-week" />`n              <Label htmlFor="ending-week" className="text-sm">`n                Ending within 1 week`n              </Label>`n            </div>`n            <div className="flex items-center space-x-2">`n              <Checkbox id="ending-month" />`n              <Label htmlFor="ending-month" className="text-sm">`n                Ending within 1 month`n              </Label>`n            </div>`n          </div>`n        </div>`n`n        {/* Advanced Options */}`n        <div className="space-y-3">`n          <Label className="text-sm font-medium">Advanced</Label>`n          <div className="space-y-2">`n            <div className="flex items-center space-x-2">`n              <Checkbox id="has-image" />`n              <Label htmlFor="has-image" className="text-sm">`n                Has image`n              </Label>`n            </div>`n            <div className="flex items-center space-x-2">`n              <Checkbox id="high-volume" />`n              <Label htmlFor="high-volume" className="text-sm">`n                High trading volume`n              </Label>`n            </div>`n            <div className="flex items-center space-x-2">`n              <Checkbox id="new-markets" />`n              <Label htmlFor="new-markets" className="text-sm">`n                Created in last 7 days`n              </Label>`n            </div>`n          </div>`n        </div>`n`n        {/* Popular Tags */}`n        <div className="space-y-3">`n          <Label className="text-sm font-medium">Popular Tags</Label>`n          <div className="flex flex-wrap gap-2">`n            {["crypto", "bitcoin", "election", "ai", "sports", "nfl", "tech", "earnings"].map((tag) => (`n              <Badge `n                key={tag} `n                variant="outline" `n                className="cursor-pointer hover:bg-primary hover:text-primary-foreground transition-colors"`n              >`n                #{tag}`n              </Badge>`n            ))}`n          </div>`n        </div>`n      </CardContent>`n    </Card>`n  );`n}