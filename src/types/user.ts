/* eslint-disable @typescript-eslint/no-explicit-any */`n// src/types/user.ts`n// User-related type definitions`n`nexport interface UserStats {`n  address: string;`n  totalWinnings: number;`n  totalBets: number;`n  winCount: number;`n  currentStreak: number;`n  longestStreak: number;`n  totalFeesPaid: number;`n  totalInvested?: number;`n  winRate: number;`n  roi: number; // Return on Investment`n  rank?: number;`n  totalMarketsParticipated?: number; // Optional for backward compatibility`n  totalLosses?: number; // Optional for backward compatibility`n  winStreak?: number; // Optional for backward compatibility`n}`n`nexport interface UserPosition {`n  marketId: number;`n  userAddress: string;`n  isOptionA: boolean;`n  shares: number;`n  amountInvested: number;`n  timestamp: number;`n  claimed: boolean;`n  potentialWinnings?: number;`n  currentValue?: number;`n}`n`nexport interface UserProfile {`n  address: string;`n  username?: string;`n  avatar?: string;`n  bio?: string;`n  stats: UserStats;`n  positions: UserPosition[];`n  notifications: UserNotification[];`n  preferences: UserPreferences;`n  createdAt: number;`n  lastActive: number;`n}`n`nexport interface UserPreferences {`n  notifications: {`n    email: boolean;`n    push: boolean;`n    marketResolution: boolean;`n    newMarkets: boolean;`n    breakingNews: boolean;`n    winnings: boolean;`n  };`n  privacy: {`n    showStats: boolean;`n    showPositions: boolean;`n    allowFollow: boolean;`n  };`n  display: {`n    theme: 'light' | 'dark' | 'system';`n    currency: 'tCTC' | 'USD';`n    timeZone: string;`n  };`n}`n`nexport interface UserNotification {`n  id: string;`n  type: 'market_resolved' | 'winnings_available' | 'market_ending' | 'new_market' | 'system';`n  title: string;`n  message: string;`n  timestamp: number;`n  read: boolean;`n  actionUrl?: string;`n  data?: {`n    marketId?: number;`n    amount?: number;`n    [key: string]: any;`n  };`n}`n`nexport interface LeaderboardUser {`n  address: string;`n  username?: string;`n  avatar?: string;`n  rank: number;`n  totalPnL?: string;`n  winRate?: number;`n  totalVolume?: string;`n  accuracy?: number;`n  change?: number; // rank change from previous period`n}`n`nexport interface LeaderboardResponse {`n  users: LeaderboardUser[];`n  userRank?: number; // Current user's rank`n  period: 'all_time' | 'monthly' | 'weekly';`n  sortBy: 'winnings' | 'win_rate' | 'streak' | 'roi';`n}`n`nexport interface UserActivityItem {`n  id: string;`n  type: 'bet_placed' | 'winnings_claimed' | 'market_created' | 'achievement_earned';`n  timestamp: number;`n  marketId?: number;`n  marketQuestion?: string;`n  amount?: number;`n  option?: 'A' | 'B';`n  outcome?: 'win' | 'loss' | 'pending';`n  description: string;`n}`n`nexport interface UserAchievement {`n  id: string;`n  name: string;`n  description: string;`n  icon: string;`n  rarity: 'common' | 'rare' | 'epic' | 'legendary';`n  unlockedAt?: number;`n  progress?: {`n    current: number;`n    target: number;`n  };`n}`n`nexport interface UserPortfolio {`n  totalValue: number;`n  totalInvested: number;`n  unrealizedPnL: number;`n  realizedPnL: number;`n  activePositions: UserPosition[];`n  historicalPositions: UserPosition[];`n  performanceChart: PortfolioDataPoint[];`n}`n`nexport interface PortfolioDataPoint {`n  timestamp: number;`n  totalValue: number;`n  unrealizedPnL: number;`n  realizedPnL: number;`n}`n`n// Follow system types`nexport interface UserFollow {`n  follower: string;`n  following: string;`n  timestamp: number;`n}`n`nexport interface FollowStats {`n  followers: number;`n  following: number;`n  isFollowing?: boolean;`n  isFollower?: boolean;`n}`n`n`n`n`nexport interface User {`n  address: string;`n  username?: string;`n  avatar?: string;`n  createdAt: number;`n  stats: UserStats;`n  verified?: boolean;`n  bio?: string;`n  socialLinks?: SocialLinks;`n}`n`n`n`nexport interface SocialLinks {`n  twitter?: string;`n  discord?: string;`n  website?: string;`n}`n`n`n`nexport interface UserActivity {`n  id: string;`n  type: ActivityType;`n  marketId?: string;`n  marketTitle?: string;`n  amount?: string;`n  side?: "yes" | "no";`n  timestamp: number;`n  txHash: string;`n}`n`nexport enum ActivityType {`n  BuyShares = "BuyShares",`n  SellShares = "SellShares", `n  CreateMarket = "CreateMarket",`n  ResolveMarket = "ResolveMarket",`n  ClaimWinnings = "ClaimWinnings"`n}